"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–∞–º—è—Ç–∏ –∏ CV –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏"""

import logging
from memory_manager import MemoryManager

logging.basicConfig(level=logging.INFO)

def test_memory():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏...")
    
    mm = MemoryManager()
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    print("\nüìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
    print(mm.get_diagnostics())
    
    # –¢–µ—Å—Ç—ã –ø–æ–∏—Å–∫–∞
    test_queries = [
        "–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –§–∏—Ä–¥–∞–≤—Å–∞",
        "–∫–æ–Ω—Ç–∞–∫—Ç—ã email telegram", 
        "voice cloning Chatterbox",
        "Llama Qwen DeepSeek –º–æ–¥–µ–ª–∏",
        "500K –∑–∞–ø—Ä–æ—Å–æ–≤ latency"
    ]
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
    for query in test_queries:
        context = mm.get_relevant_context(query, "test_user", k_cv=3)
        print(f"\n–ó–∞–ø—Ä–æ—Å: '{query}'")
        print(f"–ù–∞–π–¥–µ–Ω–æ: {len(context)} —Å–∏–º–≤–æ–ª–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
        print(f"–ü—Ä–µ–≤—å—é: {context[:200]}...")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_memory()